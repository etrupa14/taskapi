{
  "openapi": "3.0.0",
  "info": {
    "title": "Task API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/tasks": {
      "post": {
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "400": {
            "description": "Validation error or bad request"
          }
        }
      },
      "get": {
        "summary": "Get all tasks",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search keyword for task title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of tasks per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "lastKey",
            "in": "query",
            "description": "Pagination cursor (use value from `nextPageKey`)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    },
                    "nextPageKey": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "summary": "Get task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single task"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "summary": "Update a task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated task"
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Build the frontend"
          },
          "description": {
            "type": "string",
            "example": "Use React to build the UI"
          },
          "status": {
            "type": "string",
            "enum": [
              "to-do",
              "in-progress",
              "completed"
            ]
          }
        },
        "required": [
          "title",
          "status"
        ]
      }
    }
  }
}